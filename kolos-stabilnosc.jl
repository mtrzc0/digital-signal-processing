# stabilnosc
function rozwiazanie(;
    z::Vector{ComplexF64} = ComplexF64[0.7747988212229449 - 0.6322078666321191im, 0.6338425965825865 + 0.7734620629077061im, 0.7747988212229449 + 0.6322078666321191im, 0.6338425965825865 - 0.7734620629077061im, 0.7666641181763219 - 0.6420483859499398im, 0.6456791161713742 + 0.7636088520572251im, 0.7666641181763219 + 0.6420483859499398im, 0.6456791161713742 - 0.7636088520572251im, 0.7373439644119779 - 0.675517489148303im, 0.6833668826051585 + 0.7300751356939281im, 0.7373439644119779 + 0.675517489148303im, 0.6833668826051585 - 0.7300751356939281im],
    p::Vector{ComplexF64} = ComplexF64[0.6234220702867519 + 0.7791638624837406im, 0.7794189603309418 - 0.6237826096508589im, 0.6234220702867519 - 0.7791638624837406im, 3.1229915436017106 + 2.4993846879966686im, 0.6031422630334754 + 0.7797891758613019im, 0.7801747257138382 - 0.6077733503452839im, 0.6031422630334754 - 0.7797891758613019im, 0.7801747257138382 + 0.6077733503452839im, 0.4726111372588799 + 0.7293157695771523im, 0.7564132806349837 - 0.5074855000695155im, 0.4726111372588799 - 0.7293157695771523im, 0.7564132806349837 + 0.5074855000695155im],
    k::Float64 = 0.5890882678896954,
)
    for pole in p
        if abs(pole) > 1
            return -1
        end
    end
    for pole in p
        if abs(pole) == 1
            return 0
        end
    end
    return 1
end
# rozwiazanie()

# stabilnosc
function rozwiazanie(;
    z::Vector{ComplexF64} = ComplexF64[0.8576994126779323 - 0.5141514538459755im, 0.9999962868210112 + 0.0027251319582466773im, 0.8576994126779323 + 0.5141514538459755im, 0.9999962868210112 - 0.0027251319582466773im, 1.0 + 0.0im, -1.0 + 0.0im],
    p::Vector{ComplexF64} = ComplexF64[0.9958616768325527 + 0.008417865427950972im, 0.9228410340859565 - 0.13404596614147724im, 0.9958616768325527 - 0.008417865427950972im, 0.9228410340859565 + 0.13404596614147724im, 2.9999999999999996 + 0.0im, 0.8592520375181388 - 0.0im],
    k::Float64 = 0.00587472801149534,
)
    for pole in p
        if abs(pole) > 1
            return -1
        end
    end
    for pole in p
        if abs(pole) == 1
            return 0
        end
    end
    return 1
end
# rozwiazanie()
