# rr, moc
function rozwiazanie(;
    b::Vector{Float64} = [0.17071186813902622, -0.6828474725561049, 1.0242712088341572, -0.6828474725561049, 0.17071186813902622],
    a::Vector{Float64} = [1.0, -0.9302156732075635, 1.0304520379086297, -0.22591463885332275, 0.2520337923516871],
    x::Vector{Float64} = [-0.77, -0.39, -0.81, 0.25, 0.78, -0.63, 0.24, 0.44, -0.05, 0.9, -0.58, -0.43, -0.1, 0.05, 0.05, -0.94, 0.42],
    L::Int = 42,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64,L)
    for n in 1:L
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n]+=b[m]*x[n-m+1]
            end
        end
        for k in 2:K
            if 0 < n-k+1 <= L
                y[n]-=a[k]*y[n-k+1]
            end
        end
    end

    return sum(y.*y)/L
end
# rozwiazanie()

# rr, rms
function rozwiazanie(;
    b::Vector{Float64} = [0.47939668565494736, -2.396718455777035, 6.390951633328491, -10.884046460065196, 12.9616414851719, -10.884046460065196, 6.390951633328492, -2.3967184557770356, 0.4793966856549476],
    a::Vector{Float64} = [1.0, -4.1984253859082425, 9.378322690837937, -13.567509522160536, 13.900025177246398, -10.198938105424634, 5.334737255706614, -1.8376536321486605, 0.34743102338159215],
    x::Vector{Float64} = [0.74, -0.18, 0.19, 0.03, 0.79, 0.61, 0.32, -0.3, 0.11, -0.7, -0.94, 0.23, -0.95, 0.41, -0.26, -0.6],
    L::Int = 32,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n] += b[m]*x[n-m+1]
            end
        end
        for k in 2:K
            if 0 < n-k+1 <= L
                y[n] -= a[k]*y[n-k+1]
            end
        end
    end

    return sqrt(sum(y .* y)/length(y))
end
# rozwiazanie()

# rr, moc
function rozwiazanie(;
    b::Vector{Float64} = [0.6627634385563629, -2.386969976902741, 4.853880730576752, -5.920666906870027, 4.853880730576753, -2.3869699769027424, 0.6627634385563634],
    a::Vector{Float64} = [1.0, -3.1143057871887554, 5.4495020741233535, -5.784175869137851, 4.144565536196449, -1.7961252043489033, 0.4392207279464298],
    x::Vector{Float64} = [-0.89, 0.94, -0.23, -0.53, -0.07, 0.02, 0.09, -0.58, 0.73, 0.67, -0.05, -0.64, -0.98, -0.57, 0.85, -0.29, 0.37, -0.97, 0.25, 0.02, -0.64, -0.93],
    L::Int = 46,
)
    M = length(b)
    K = length(a)
    N = length(x)

    y = zeros(Float64, L)
    for n in 1:L
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n] += b[m]*x[n-m+1]
            end
        end
        for k in 2:K
            if 0 < n-k+1 <= L
                y[n] -= a[k]*y[n-k+1]
            end
        end
    end
    return sum(y .* y)/length(y)
end
# rozwiazanie()

# rr, moc
function rozwiazanie(;
    b::Vector{Float64} = [0.3086830209856637, -2.1783661412235524, 8.257373012318105, -20.936679297054166, 39.112116500166, -56.08688586466961, 63.144026107497716, -56.08688586466961, 39.112116500166, -20.936679297054166, 8.257373012318103, -2.1783661412235515, 0.30868302098566364],
    a::Vector{Float64} = [1.0, -5.704304078570587, 17.360262034122854, -35.503548986311266, 53.76506187599037, -62.88191324895661, 58.065950717583576, -42.544104993519596, 24.595822264801132, -10.968678204031226, 3.6179890060178987, -0.8013130945053464, 0.09528527592140434],
    x::Vector{Float64} = [-0.71, 0.16, 0.42, -0.66, 0.03, 0.29, 0.34, -0.13, -0.69, -0.54, 0.31, 0.18, 0.74, 0.12, 0.05, -0.57, 0.71, 0.17, -0.67, 0.27, -0.96, -0.52, 0.65, -0.38, -0.46, -0.43, -0.96, 0.03, -0.31, -0.56, 0.96, -0.16, 0.52, 0.19, -0.91, 0.12, -0.35],
    L::Int = 48,
)       
    M = length(b)
    K = length(a)
    N = length(x)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n] += b[m]*x[n-m+1]
            end
        end
        for k in 2:K
            if 0 < n-k+1 <= L
                y[n] -= a[k]*y[n-k+1]
            end
        end
    end
    return sum(y .* y)/length(y)
end
# rozwiazanie()

# rr, rms
function rozwiazanie(;
    b::Vector{Float64} = [0.17327242644714178, -0.8417443295265945, 1.8658198947340179, -2.3919295938041114, 1.8658198947340177, -0.8417443295265944, 0.17327242644714175],
    a::Vector{Float64} = [1.0, -1.9234073946110977, 2.3846685845801554, -1.7457173609326966, 0.836213821540958, -0.23354278972658468, 0.03005294382812647],
    x::Vector{Float64} = [-0.82, 0.05, -0.99, -0.94, 0.95, -0.05, -0.19, 0.54, 0.92, -0.18],
    L::Int = 33,
)
    M = length(b)
    K = length(a)
    N = length(x)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n] += b[m]*x[n-m+1]
            end
        end
        for k in 2:K
            if 0 < n-k+1 <= L
                y[n] -= a[k]*y[n-k+1]
            end
        end
    end
    return sqrt(sum(y .* y)/length(y))
end
# rozwiazanie()
