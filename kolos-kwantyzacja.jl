# kwantyzacja
function rozwiazanie(;
    a::Float64 = 0.0017,
    b::Float64 = 1.0,
    x::Vector{Float64} = [0.32519, 0.66977, 0.22112, 0.86303, 0.84786, 0.78474, 0.74299, 0.89449, 0.40521, 0.67294, 0.12336, 0.8489, 0.89497, 0.992, 0.37029, 0.93429, 0.23715, 0.44712, 0.55996, 0.91066, 0.77214, 0.72759, 0.24131, 0.96841, 0.92991, 0.97906, 0.69307, 0.18012, 0.01652, 0.42954, 0.63751, 0.01805, 0.80662, 0.93477, 0.84842, 0.3272, 0.08417, 0.99283, 0.17723, 0.65494, 0.42265, 0.52204, 0.34743, 0.0591, 0.70169, 0.50724, 0.89066, 0.52285, 0.27484, 0.74983, 0.0017, 0.02743, 0.98037, 0.99545, 0.71153, 0.76461, 0.54003, 0.33978],
)
    N=9
    L=range(start=a,stop=b,length=2^N)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x - xq
    return sqrt(sum(e .* e)/length(e))
end
# rozwiazanie()

function rozwiazanie(;
    a::Float64 = -2.4,
    b::Float64 = 4.9,
    x::Vector{Float64} = [-1.84, -1.3681, -0.89621, -0.42431, 0.04758, 0.51948, 0.99137, 1.46327, 1.93516, 2.40706, 2.87895, 3.35085, 3.82275, 4.29464, 4.76654, 4.76157, 4.28967, 3.81778, 3.34588, 2.87399, 2.40209, 1.9302, 1.4583, 0.98641, 0.51451, 0.04261, -0.42928, -0.90118, -1.37307, -1.84497, -2.31686, -2.41124, -1.93935, -1.46745, -0.99556, -0.52366, -0.05176, 0.42013, 0.89203, 1.36392, 1.83582, 2.30771, 2.77961, 3.2515, 3.7234, 4.19529, 4.66719, 4.86092, 4.38902, 3.91712, 3.44523, 2.97333],
)
    n=5
    L=range(start=a, stop=b, length=n^2)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x - xq
    return sqrt(sum(e .* e)/length(x))
end
# rozwiazanie()
