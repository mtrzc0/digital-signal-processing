# kwantyzacja
function rozwiazanie(;
    a::Float64 = 0.0017,
    b::Float64 = 1.0,
    x::Vector{Float64} = [0.32519, 0.66977, 0.22112, 0.86303, 0.84786, 0.78474, 0.74299, 0.89449, 0.40521, 0.67294, 0.12336, 0.8489, 0.89497, 0.992, 0.37029, 0.93429, 0.23715, 0.44712, 0.55996, 0.91066, 0.77214, 0.72759, 0.24131, 0.96841, 0.92991, 0.97906, 0.69307, 0.18012, 0.01652, 0.42954, 0.63751, 0.01805, 0.80662, 0.93477, 0.84842, 0.3272, 0.08417, 0.99283, 0.17723, 0.65494, 0.42265, 0.52204, 0.34743, 0.0591, 0.70169, 0.50724, 0.89066, 0.52285, 0.27484, 0.74983, 0.0017, 0.02743, 0.98037, 0.99545, 0.71153, 0.76461, 0.54003, 0.33978],
)
    N=9
    L=range(start=a,stop=b,length=2^N)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x - xq
    return sqrt(sum(e .* e)/length(e))
end
# rozwiazanie()

function rozwiazanie(;
    a::Float64 = -2.4,
    b::Float64 = 4.9,
    x::Vector{Float64} = [-1.84, -1.3681, -0.89621, -0.42431, 0.04758, 0.51948, 0.99137, 1.46327, 1.93516, 2.40706, 2.87895, 3.35085, 3.82275, 4.29464, 4.76654, 4.76157, 4.28967, 3.81778, 3.34588, 2.87399, 2.40209, 1.9302, 1.4583, 0.98641, 0.51451, 0.04261, -0.42928, -0.90118, -1.37307, -1.84497, -2.31686, -2.41124, -1.93935, -1.46745, -0.99556, -0.52366, -0.05176, 0.42013, 0.89203, 1.36392, 1.83582, 2.30771, 2.77961, 3.2515, 3.7234, 4.19529, 4.66719, 4.86092, 4.38902, 3.91712, 3.44523, 2.97333],
)
    n=5
    L=range(start=a, stop=b, length=2^n)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x - xq
    return sqrt(sum(e .* e)/length(x))
end
# rozwiazanie()

function rozwiazanie(;
    a::Float64 = -5.3,
    b::Float64 = -4.2,
    x::Vector{Float64} = [-5.2689, -5.25636, -5.21465, -5.15449, -5.0929, -5.04683, -5.02713, -5.03484, -5.06111, -5.0907, -5.10762, -5.10091, -5.06843, -5.01736, -4.9614, -4.91559, -4.89094, -4.89054, -4.90865, -4.93302, -4.94945, -4.94696, -4.92168, -4.87803, -4.82696, -4.78184, -4.75357, -4.74673, -4.75805, -4.77778, -4.79335, -4.79397, -4.77448, -4.73709, -4.69045, -4.64635, -4.61543, -4.60335, -4.60885, -4.62433, -4.63874, -4.64161, -4.62687, -4.59491, -4.55237, -4.50957, -4.47675, -4.46035, -4.46076, -4.47227, -4.48525, -4.48971, -4.4789, -4.45173, -4.41305, -4.37178, -4.33767, -4.31769, -4.31359, -4.32135, -4.33268, -4.33816, -4.33062, -4.3077, -4.27268, -4.23317, -4.19827, -4.17533, -4.1672, -4.17137, -4.18088],
)
    n=4
    L=range(start=a, stop=b, length=2^n)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x .- xq
    return sum(e .* e)
end
# rozwiazanie()

function rozwiazanie(;
    a::Float64 = -5.6,
    b::Float64 = 0.79,
    x::Vector{Float64} = [0.032, -0.60492, -1.24184, -1.87875, -2.51567, -3.15259, -3.78951, -4.42643, -5.06335, -5.49974, -4.86282, -4.2259, -3.58898, -2.95206, -2.31515, -1.67823, -1.04131, -0.40439, 0.23253, 0.73056, 0.09364, -0.54328, -1.1802, -1.81712, -2.45404, -3.09095, -3.72787, -4.36479, -5.00171, -5.56137, -4.92446, -4.28754, -3.65062, -3.0137, -2.37678, -1.73987, -1.10295, -0.46603, 0.17089, 0.79219, 0.15527, -0.48164, -1.11856, -1.75548, -2.3924, -3.02932, -3.66623, -4.30315, -4.94007, -5.57699, -4.98609, -4.34917, -3.71226, -3.07534, -2.43842, -1.8015, -1.16458, -0.52767, 0.10925, 0.74617, 0.21691, -0.42001, -1.05692, -1.69384, -2.33076, -2.96768, -3.6046, -4.24152, -4.87843, -5.51535, -5.04773, -4.41081, -3.77389, -3.13698, -2.50006, -1.86314, -1.22622, -0.5893, 0.04761, 0.68453, 0.27855, -0.35837, -0.99529, -1.63221, -2.26912, -2.90604, -3.54296, -4.17988, -4.8168, -5.45371, -5.10937, -4.47245, -3.83553, -3.19861, -2.5617, -1.92478],
)
    n=3
    L=range(start=a, stop=b, length=2^n)
    q=x->L[argmin(abs.(x .- L))]
    e=x .- q.(x)
    return sum(e .* e)/length(x)
end
# rozwiazanie()