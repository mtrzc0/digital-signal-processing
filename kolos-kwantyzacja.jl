# kwantyzacja
function rozwiazanie(;
    a::Float64 = 0.0017,
    b::Float64 = 1.0,
    x::Vector{Float64} = [0.32519, 0.66977, 0.22112, 0.86303, 0.84786, 0.78474, 0.74299, 0.89449, 0.40521, 0.67294, 0.12336, 0.8489, 0.89497, 0.992, 0.37029, 0.93429, 0.23715, 0.44712, 0.55996, 0.91066, 0.77214, 0.72759, 0.24131, 0.96841, 0.92991, 0.97906, 0.69307, 0.18012, 0.01652, 0.42954, 0.63751, 0.01805, 0.80662, 0.93477, 0.84842, 0.3272, 0.08417, 0.99283, 0.17723, 0.65494, 0.42265, 0.52204, 0.34743, 0.0591, 0.70169, 0.50724, 0.89066, 0.52285, 0.27484, 0.74983, 0.0017, 0.02743, 0.98037, 0.99545, 0.71153, 0.76461, 0.54003, 0.33978],
)
    N=9
    L=range(start=a,stop=b,length=2^N)
    quant(L)=x->L[argmin(abs.(x .- L))]
    q = quant(L)
    xq = q.(x)
    e = x - xq
    return sqrt(sum(e .* e)/length(e))
end
# rozwiazanie()