# splot, energia
function rozwiazanie(;
    x::Vector{Float64} = [1.79, -2.24, -4.81, -4.26, 0.56, -3.89, 2.22, 0.44, -3.98, -0.15, 1.77, -0.4, 4.52, 3.01, -4.5, 0.94, -3.94, 2.09, 1.83, -0.15, 0.21, 2.95, 1.78, -4.79, -1.84, 4.86, 2.78, -2.76, -4.04, 4.63, 1.76, 0.44, -2.17, 0.46, -4.82, 3.4, 2.11, 0.96, -3.61, -0.32, 0.32, -3.59, 3.66, 0.84, -0.76, 2.87, 1.21, -3.12, 2.9, 2.47, -0.95, 4.7, -3.28, 2.59, -4.97, -4.34, -0.75, 4.56, 3.61, 4.72, 3.82],
    h::Vector{Float64} = [0.24, -4.26, 3.92, -4.55, -1.19, 0.51, -4.65, -0.93, 2.41, 1.29, 0.74, -3.88, 0.75, -1.43],
)
    N=length(x)
    M=length(h)
    K=N+M+1
    y=zeros(Float64, K)

    for n in 1:K
        for m in 1:M
            if 0 < n-m+1 <= N 
                y[n]+=h[m]*x[n-m+1]
            end
        end
    end
    return sum(y .* y)
end
# rozwiazanie()

function rozwiazanie(;
    x::Vector{Float64} = [-3.13, 0.21, -0.38, 2.88, 3.52, 4.82, -1.36, 1.78, 4.91, 0.32, -3.82, -3.69, -1.3, -3.25, 3.14, 2.7, -0.45, -1.48, 4.24, -3.02, -2.76, 3.61, 4.89, 1.96, 3.57, 0.71, -0.99, 0.51, 1.24, -0.01, -4.88, -4.58, 1.61, -3.2, 1.68, -4.35, 1.15, -0.73, -3.12, -1.26, -4.01, -0.14, -0.46, 1.17, 2.09, -2.2, 1.7, 3.11, -1.87, -0.75, 1.4, 1.4, 0.01, 0.55, -1.21, 0.35, 0.12, 0.42, 4.8, -4.44, 3.27, -0.6, -1.63, 3.81],
    h::Vector{Float64} = [3.75, -0.41, -2.15, -0.71, -0.41, 3.45, 3.61, -2.06, -3.83, 0.2, 1.07, 1.45, -0.27, -2.56, 1.72, 3.0, 4.16, 1.46, 4.76, 0.61, 4.5, 1.19, -3.78],
)
    N=length(x)
    M=length(h)
    K=M+N+1
    y=zeros(Float64, K)

    for n in 1:K
        for m in 1:M 
            if 0 < n-m+1 <= N
                y[n]+=h[m]*x[n-m+1]
            end
        end
    end
    return sqrt(sum(y .* y)/K)
end
# rozwiazanie()

function rozwiazanie(;
    x::Vector{Float64} = [-3.7, -3.08, -0.03, -4.52, 1.96, -2.09, -0.57, 4.51, -2.29, -3.16, -0.33, 0.09, 4.28, -1.48, -2.41, 0.25, -4.49, -4.92, -2.37, -3.47, 4.74, 1.43, -2.83, 1.64, -3.8, -4.85, 0.3, -4.99, -3.69, -1.57, -0.28, -2.36, -4.77, 0.97, -0.35, -0.26, 0.61, -3.76, -3.19, 4.72, -2.3, 0.0, 1.58, -0.13, 2.75, -4.13, -3.22, -3.15, 2.5, -0.71, 3.49, -2.69, -2.04, -2.29, -2.43, 3.01, 2.17, 2.21, -4.16, -1.48, -0.69, -3.52, -3.6],
    h::Vector{Float64} = [-0.64, 4.88, -0.42, -1.42, 0.06, -3.67, -3.69, -2.31, 4.06, -1.02, -2.1],
)
    N=length(x)
    M=length(h)
    K=M+N-1
    y=zeros(Float64, K)

    for n in 1:K
        for m in 1:M
            if 0 < n-m+1 <= N 
                y[n] += h[m]*x[n-m+1]
            end
        end
    end
    return sum(y)/length(y)
end
# rozwiazanie()

function rozwiazanie(;
    x::Vector{Float64} = [-3.7, -3.08, -0.03, -4.52, 1.96, -2.09, -0.57, 4.51, -2.29, -3.16, -0.33, 0.09, 4.28, -1.48, -2.41, 0.25, -4.49, -4.92, -2.37, -3.47, 4.74, 1.43, -2.83, 1.64, -3.8, -4.85, 0.3, -4.99, -3.69, -1.57, -0.28, -2.36, -4.77, 0.97, -0.35, -0.26, 0.61, -3.76, -3.19, 4.72, -2.3, 0.0, 1.58, -0.13, 2.75, -4.13, -3.22, -3.15, 2.5, -0.71, 3.49, -2.69, -2.04, -2.29, -2.43, 3.01, 2.17, 2.21, -4.16, -1.48, -0.69, -3.52, -3.6],
    h::Vector{Float64} = [-0.64, 4.88, -0.42, -1.42, 0.06, -3.67, -3.69, -2.31, 4.06, -1.02, -2.1],
)
    N=length(x)
    M=length(h)
    K=M+N-1
    y=zeros(Float64, K)
    
    for n in 1:K
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n]+=h[m]*x[n-m+1]
            end
        end
    end
    return sum(y)/K
end
# rozwiazanie()

function rozwiazanie(;
    x::Vector{Float64} = [3.99, 4.6, 3.57, 1.35, -1.29, -4.78, -1.5, 1.78, 4.86, 2.52, -0.42, 1.68, 1.4, -2.56, 0.61, 0.12, 4.6, 1.76, -4.93, -2.21, -1.07, -4.81, -3.48, -0.65, -1.04, -3.53, -2.08, 0.94, -4.23, -4.8, 1.45, 2.72, 3.48, 2.24, -1.17, 1.47, -4.83, 3.85, -0.83, 3.92, -0.13, 2.68, 2.49, 3.78, -0.07, -2.9, -2.83, -4.85, 1.29, -2.01, -2.72, -4.41, 4.86, 2.36, -2.04, 0.53, -1.86, -4.27, 0.51, 0.83, 3.42, -1.98],
    h::Vector{Float64} = [3.73, -2.41, -4.15, 3.2, -3.61, -1.43, 2.87, 4.82, 3.43, -3.85, 3.78, -1.1, -0.25, 0.97, -3.4, 4.31, 1.68, 3.21, -1.48, 0.8, 2.54, 0.25, 1.27],
)
    N=length(x)
    M=length(h)
    K=N+M-1
    y=zeros(Float64, K)

    for n in 1:K
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n]+=h[m]*x[n-m+1]
            end
        end
    end
    return sum(y.*y)/K
end
# rozwiazanie()

function rozwiazanie(;
    x::Vector{Float64} = [-3.33, -0.09, -0.98, -2.72, -3.12, 3.56, -0.83, 1.4, 1.1, -4.48, 2.94, 4.78, -3.66, 1.81, 0.31, 3.81, -2.33, -4.8, 4.57, 3.99, 4.57, 3.27, -3.0, -0.37, 4.69, 2.85, 0.42, 4.07, -2.19, 1.94, 1.36, 1.67, -0.19, 4.33, -1.23, -1.08, -2.71, -0.56, 4.61, 3.96, -1.31, -1.82, 3.25, -3.72, -4.04, 2.05, -1.36, -3.62, -2.22, -3.58, -0.11, -4.13, 2.52, 3.3, 1.99, 2.03, -1.23, 1.46, 1.75, -0.77, 4.55],
    h::Vector{Float64} = [-0.51, 0.04, 2.04, 1.06, 1.34, -4.33, 1.79, 4.69, 0.09, -3.38, -4.88, -4.17, -4.35, -3.21, 0.06, -2.74, -2.82, -0.66, 0.12, -1.6],
)
    N=length(x)
    M=length(h)
    K=N+M-1
    y=zeros(Float64, K)

    for n in 1:K
        for m in 1:M
            if 0 < n-m+1 <= N
                y[n]+=h[m]*x[n-m+1]
            end
        end
    end
    return sqrt(sum(y.*y)/K)
end
# rozwiazanie()